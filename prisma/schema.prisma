// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id      String       @id @default(uuid())
  nombre  String
  Product Product[]
}

model State {
  id      String       @id @default(uuid())
  codigo  String
  Product Product[]
}

model Product {
  id            String      @id @default(uuid())
  categoryId    String
  category      Category @relation(fields: [categoryId], references: [id])
  cantidad      Float
  descripcionEn String
  descripcionEs String
  origen        String
  stateId       String
  state         State    @relation(fields: [stateId], references: [id])
  marca         String
  precioTm      Float
  pesoKg        Float
  pesoLibras    Float
  totalPrecio   Float
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  userId        String
  user          User     @relation(fields: [userId], references: [id])
}

model Account {
  id                       String  @id @default(uuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.Text
  refresh_token_expires_in Int?
  access_token             String? @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  isActive      Boolean   @default(true)
  rolses        String[]  @default(["user"])
  password      String?
  accounts      Account[]
  sessions      Session[]
  Product       Product[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
